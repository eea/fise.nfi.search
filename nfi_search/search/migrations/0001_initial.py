# -*- coding: utf-8 -*-
# Generated by Django 1.11.13 on 2018-05-24 08:20
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CountryData',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('version_date', models.DateTimeField(blank=True, null=True)),
                ('country_code', models.TextField(blank=True, null=True)),
                ('country_name', models.TextField(blank=True, null=True)),
                ('source_name', models.TextField(blank=True, null=True)),
                ('source_type', models.TextField(blank=True, null=True)),
                ('release_date', models.TextField(blank=True, null=True)),
                ('source_description', models.TextField(blank=True, null=True)),
                ('main_url', models.TextField(blank=True, null=True)),
                ('documentation_url', models.TextField(blank=True, null=True)),
                ('data_url', models.TextField(blank=True, null=True)),
                ('accessibility', models.TextField(blank=True, null=True)),
                ('availability', models.TextField(blank=True, null=True)),
                ('authors', models.TextField(blank=True, null=True)),
                ('data_producer', models.TextField(blank=True, null=True)),
                ('contact', models.TextField(blank=True, null=True)),
                ('contact_email', models.TextField(blank=True, null=True)),
                ('contact_technical', models.TextField(blank=True, null=True)),
                ('contact_efdac', models.TextField(blank=True, null=True)),
                ('inventory_type', models.TextField(blank=True, null=True)),
                ('inventory_sampling_scheme', models.TextField(blank=True, null=True)),
                ('inventory_sampling_density', models.TextField(blank=True, null=True)),
                ('inventory_plot_area', models.TextField(blank=True, null=True)),
                ('forest_plots', models.IntegerField(blank=True, null=True)),
                ('inventory_comments', models.TextField(blank=True, null=True)),
                ('spatial_coverage', models.TextField(blank=True, null=True)),
                ('spatial_resolution', models.TextField(blank=True, null=True)),
                ('temporal_coverage', models.TextField(blank=True, null=True)),
                ('available_data', models.TextField(blank=True, null=True)),
                ('other_data', models.TextField(blank=True, null=True)),
                ('data_format', models.TextField(blank=True, null=True)),
                ('additional_info', models.TextField(blank=True, null=True)),
                ('int_be_weaknesses', models.TextField(blank=True, null=True)),
                ('int_be_strengths', models.TextField(blank=True, null=True)),
                ('int_be_comments', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'country_data',
            },
        ),
        migrations.CreateModel(
            name='DCountry',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField(unique=True)),
                ('code', models.TextField()),
            ],
            options={
                'db_table': 'd_country',
            },
        ),
        migrations.CreateModel(
            name='DDataSet',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField(unique=True)),
            ],
            options={
                'db_table': 'd_data_set',
            },
        ),
        migrations.CreateModel(
            name='DDataSource',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField(unique=True)),
            ],
            options={
                'db_table': 'd_data_source',
            },
        ),
        migrations.CreateModel(
            name='DDataType',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField(unique=True)),
            ],
            options={
                'db_table': 'd_data_type',
            },
        ),
        migrations.CreateModel(
            name='DFileType',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField(unique=True)),
                ('media_type', models.TextField()),
            ],
            options={
                'db_table': 'd_file_type',
            },
        ),
        migrations.CreateModel(
            name='DInfoLevel',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField(unique=True)),
                ('description', models.TextField()),
            ],
            options={
                'db_table': 'd_info_level',
            },
        ),
        migrations.CreateModel(
            name='DKeyword',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField(unique=True)),
            ],
            options={
                'db_table': 'd_keyword',
            },
        ),
        migrations.CreateModel(
            name='DLanguage',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField(unique=True)),
            ],
            options={
                'db_table': 'd_language',
            },
        ),
        migrations.CreateModel(
            name='DNutsLevel',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField(unique=True)),
                ('description', models.TextField()),
                ('level', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'd_nuts_level',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('title', models.TextField()),
                ('description', models.TextField(blank=True, null=True)),
                ('published_year', models.IntegerField(blank=True, null=True)),
                ('data_collection_start_year', models.IntegerField(blank=True, null=True)),
                ('data_collection_end_year', models.IntegerField(blank=True, null=True)),
                ('next_update_year', models.IntegerField(blank=True, null=True)),
                ('additional_info', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'document',
            },
        ),
        migrations.CreateModel(
            name='DResourceType',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField(unique=True)),
            ],
            options={
                'db_table': 'd_resource_type',
            },
        ),
        migrations.CreateModel(
            name='DTopicCategory',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField(unique=True)),
            ],
            options={
                'db_table': 'd_topic_category',
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('external_link', models.TextField(blank=True, null=True)),
                ('file_size', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'file',
            },
        ),
        migrations.CreateModel(
            name='GeographicBounds',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('bound_north', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('bound_east', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('bound_south', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('bound_west', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('projection', models.TextField(blank=True, null=True)),
                ('spatial_resolution', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'geographic_bounds',
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, null=True)),
                ('responsible_person', models.TextField(blank=True, null=True)),
                ('email', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'organization',
            },
        ),
        migrations.CreateModel(
            name='DocumentKeyword',
            fields=[
                ('document', models.ForeignKey(db_column='id_document', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='search.Document')),
                ('keyword', models.ForeignKey(db_column='id_keyword', on_delete=django.db.models.deletion.DO_NOTHING, to='search.DKeyword')),
            ],
            options={
                'db_table': 'document_keyword',
            },
        ),
        migrations.CreateModel(
            name='DocumentNutsLevel',
            fields=[
                ('document', models.ForeignKey(db_column='id_document', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='search.Document')),
                ('nuts_level', models.ForeignKey(db_column='id_nuts_level', on_delete=django.db.models.deletion.DO_NOTHING, to='search.DNutsLevel')),
            ],
            options={
                'db_table': 'document_nuts_level',
            },
        ),
        migrations.CreateModel(
            name='FileLanguage',
            fields=[
                ('file', models.ForeignKey(db_column='id_file', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='search.File')),
                ('language', models.ForeignKey(db_column='id_language', on_delete=django.db.models.deletion.DO_NOTHING, to='search.DLanguage')),
            ],
            options={
                'db_table': 'file_language',
            },
        ),
        migrations.AddField(
            model_name='geographicbounds',
            name='document',
            field=models.ForeignKey(blank=True, db_column='id_document', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='search.Document'),
        ),
        migrations.AddField(
            model_name='file',
            name='document',
            field=models.ForeignKey(blank=True, db_column='id_document', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='search.Document'),
        ),
        migrations.AddField(
            model_name='file',
            name='file_type',
            field=models.ForeignKey(blank=True, db_column='id_file_type', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='search.DFileType'),
        ),
        migrations.AddField(
            model_name='document',
            name='country',
            field=models.ForeignKey(blank=True, db_column='id_country', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='search.DCountry'),
        ),
        migrations.AddField(
            model_name='document',
            name='data_set',
            field=models.ForeignKey(blank=True, db_column='id_data_set', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='search.DDataSet'),
        ),
        migrations.AddField(
            model_name='document',
            name='data_source',
            field=models.ForeignKey(blank=True, db_column='id_data_source', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='search.DDataSource'),
        ),
        migrations.AddField(
            model_name='document',
            name='data_type',
            field=models.ForeignKey(blank=True, db_column='id_data_type', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='search.DDataType'),
        ),
        migrations.AddField(
            model_name='document',
            name='info_level',
            field=models.ForeignKey(blank=True, db_column='id_info_level', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='search.DInfoLevel'),
        ),
        migrations.AddField(
            model_name='document',
            name='organization',
            field=models.ForeignKey(blank=True, db_column='id_organization', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='search.Organization'),
        ),
        migrations.AddField(
            model_name='document',
            name='parent',
            field=models.ForeignKey(blank=True, db_column='id_parent', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='search.Document'),
        ),
        migrations.AddField(
            model_name='document',
            name='resource_type',
            field=models.ForeignKey(blank=True, db_column='id_resource_type', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='search.DResourceType'),
        ),
        migrations.AddField(
            model_name='document',
            name='topic_category',
            field=models.ForeignKey(blank=True, db_column='id_topic_category', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='search.DTopicCategory'),
        ),
        migrations.AddField(
            model_name='countrydata',
            name='country',
            field=models.ForeignKey(blank=True, db_column='id_country', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='search.DCountry'),
        ),
        migrations.AlterUniqueTogether(
            name='filelanguage',
            unique_together=set([('file', 'language')]),
        ),
        migrations.AlterUniqueTogether(
            name='documentnutslevel',
            unique_together=set([('document', 'nuts_level')]),
        ),
        migrations.AlterUniqueTogether(
            name='documentkeyword',
            unique_together=set([('document', 'keyword')]),
        ),
    ]
